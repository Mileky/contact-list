### Тестирование поиска коллеги по id (без GET-параметра)
GET http://localhost:8080/contacts/Директор

> {%
   client.test('Тестирование поиска коллеги по id (без GET-параметра)', function () {
   client.assert(response.status === 200, 'Проверяю код ответа. Ожидаю код 200. Фактическое знаение: ' + response.status);
   client.assert(response.contentType.mimeType === "application/json", 'Проверяю application/json. Фактическое знаение: ' + response.contentType.mimeType);
   client.assert(response.body['id_recipient'] === 10, "id получателя не корректен");
   client.assert(response.body['full_name'] === "Шатов Александр Иванович", "полное имя не корректно");
   client.assert(response.body['birthday'] === "02.12.1971", "день рождения не корректно");
   client.assert(response.body['profession'] === "", "профессия не корректна");
   client.assert(response.body['department'] === "Дирекция", "отдел не корректен");
   client.assert(response.body['position'] === "Директор", "должность не корректна");
   client.assert(response.body['room_number'] === "405", "номер кабинета не корректен");
 });
 %}

### Тестирование поиска даты рождения и профессии коллеги по id
GET http://localhost:8080/contacts?id_recipient=10

> {%
   client.test('Тестирование поиска даты рождения и профессии коллеги по id', function () {
   client.assert(response.status === 200, 'Проверяю код ответа. Ожидаю код 200. Фактическое знаение: ' + response.status);
   client.assert(response.contentType.mimeType === "application/json", 'Проверяю application/json. Фактическое знаение: ' + response.contentType.mimeType);
   client.assert(response.body[0]['id_recipient'] === 10, "id получателя не корректен");
   client.assert(response.body[0]['full_name'] === "Шатов Александр Иванович", "полное имя не корректно");
   client.assert(response.body[0]['birthday'] === "02.12.1971", "день рождения не корректно");
   client.assert(response.body[0]['profession'] === "", "профессия не корректна");
   client.assert(response.body[0]['department'] === "Дирекция", "отдел не корректен");
   client.assert(response.body[0]['position'] === "Директор", "должность не корректна");
   client.assert(response.body[0]['room_number'] === "405", "номер кабинета не корректен");
 });
 %}

### Тестирование поиска коллеги по Ф.И.О
GET http://localhost:8080/contacts?full_name=Шатов Александр Иванович

> {%
   client.test('Тестирование поиска коллеги по Ф.И.О', function () {
   client.assert(response.status === 200, 'Проверяю код ответа. Ожидаю код 200. Фактическое знаение: ' + response.status);
   client.assert(response.contentType.mimeType === "application/json", 'Проверяю application/json. Фактическое знаение: ' + response.contentType.mimeType);
   client.assert(response.body[0]['id_recipient'] === 10, "id получателя не корректен");
   client.assert(response.body[0]['full_name'] === "Шатов Александр Иванович", "полное имя не корректно");
   client.assert(response.body[0]['birthday'] === "02.12.1971", "день рождения не корректно");
   client.assert(response.body[0]['profession'] === "", "профессия не корректна");
   client.assert(response.body[0]['department'] === "Дирекция", "отдел не корректен");
   client.assert(response.body[0]['position'] === "Директор", "должность не корректна");
   client.assert(response.body[0]['room_number'] === "405", "номер кабинета не корректен");
 });
 %}

### Тестирование поиска коллеги по дате рождения
GET http://localhost:8080/contacts?birthday=02.12.1971

> {%
   client.test('Тестирование поиска коллеги по дате рождения', function () {
   client.assert(response.status === 200, 'Проверяю код ответа. Ожидаю код 200. Фактическое знаение: ' + response.status);
   client.assert(response.contentType.mimeType === "application/json", 'Проверяю application/json. Фактическое знаение: ' + response.contentType.mimeType);
   client.assert(response.body[0]['id_recipient'] === 10, "id получателя не корректен");
   client.assert(response.body[0]['full_name'] === "Шатов Александр Иванович", "полное имя не корректно");
   client.assert(response.body[0]['birthday'] === "02.12.1971", "день рождения не корректно");
   client.assert(response.body[0]['profession'] === "", "профессия не корректна");
   client.assert(response.body[0]['department'] === "Дирекция", "отдел не корректен");
   client.assert(response.body[0]['position'] === "Директор", "должность не корректна");
   client.assert(response.body[0]['room_number'] === "405", "номер кабинета не корректен");
 });
 %}

### Тестирование поиска коллеги по отделу
GET http://localhost:8080/contacts?department=Дирекция

> {%
   client.test('Тестирование поиска коллеги по статусу отделу', function () {
   client.assert(response.status === 200, 'Проверяю код ответа. Ожидаю код 200. Фактическое знаение: ' + response.status);
   client.assert(response.contentType.mimeType === "application/json", 'Проверяю application/json. Фактическое знаение: ' + response.contentType.mimeType);
   client.assert(response.body[0]['id_recipient'] === 10, "id получателя не корректен");
   client.assert(response.body[0]['full_name'] === "Шатов Александр Иванович", "полное имя не корректно");
   client.assert(response.body[0]['birthday'] === "02.12.1971", "день рождения не корректно");
   client.assert(response.body[0]['profession'] === "", "профессия не корректна");
   client.assert(response.body[0]['department'] === "Дирекция", "отдел не корректен");
   client.assert(response.body[0]['position'] === "Директор", "должность не корректна");
   client.assert(response.body[0]['room_number'] === "405", "номер кабинета не корректен");
 });
 %}

### Тестирование поиска коллеги по должности
GET http://localhost:8080/contacts?position=Директор

> {%
   client.test('Тестирование поиска коллеги по должности', function () {
   client.assert(response.status === 200, 'Проверяю код ответа. Ожидаю код 200. Фактическое знаение: ' + response.status);
   client.assert(response.contentType.mimeType === "application/json", 'Проверяю application/json. Фактическое знаение: ' + response.contentType.mimeType);
   client.assert(response.body[0]['id_recipient'] === 10, "id получателя не корректен");
   client.assert(response.body[0]['full_name'] === "Шатов Александр Иванович", "полное имя не корректно");
   client.assert(response.body[0]['birthday'] === "02.12.1971", "день рождения не корректно");
   client.assert(response.body[0]['profession'] === "", "профессия не корректна");
   client.assert(response.body[0]['department'] === "Дирекция", "отдел не корректен");
   client.assert(response.body[0]['position'] === "Директор", "должность не корректна");
   client.assert(response.body[0]['room_number'] === "405", "номер кабинета не корректен");
 });
 %}

### Тестирование поиска коллеги по номеру кабинета
GET http://localhost:8080/contacts?room_number=405

> {%
   client.test('Тестирование поиска коллеги по номеру кабинета', function () {
   client.assert(response.status === 200, 'Проверяю код ответа. Ожидаю код 200. Фактическое знаение: ' + response.status);
   client.assert(response.contentType.mimeType === "application/json", 'Проверяю application/json. Фактическое знаение: ' + response.contentType.mimeType);
   client.assert(response.body[0]['id_recipient'] === 10, "id получателя не корректен");
   client.assert(response.body[0]['full_name'] === "Шатов Александр Иванович", "полное имя не корректно");
   client.assert(response.body[0]['birthday'] === "02.12.1971", "день рождения не корректно");
   client.assert(response.body[0]['profession'] === "", "профессия не корректна");
   client.assert(response.body[0]['department'] === "Дирекция", "отдел не корректен");
   client.assert(response.body[0]['position'] === "Директор", "должность не корректна");
   client.assert(response.body[0]['room_number'] === "405", "номер кабинета не корректен");
 });
 %}

### Тестирование поиска контактов по категориям(коллеги)
GET http://localhost:8080/contacts?category=colleagues

> {%
   client.test('Тестирование поиска контактов по категориям(коллеги)', function () {
   client.assert(response.status === 200, 'Проверяю код ответа. Фактическое знаение: ' + response.status);
   client.assert(response.contentType.mimeType === "application/json", 'Проверяю application/json. Фактическое знаение: ' + response.contentType.mimeType);
   client.assert(response.body.hasOwnProperty('length') && response.body.length === 2, "В ответе есть 2 элемента");
 });
 %}