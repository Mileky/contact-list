### Тестирование ситуации когда указан несуществующий ID контакта
GET http://localhost:80/contacts/0

> {%
   client.test('Тестирование поиска знакомого по id (без GET-параметра)', function () {
   client.assert(response.status === 404, 'Проверяю код ответа. Ожидаю код 404. Фактическое знаение: ' + response.status);
   client.assert(response.contentType.mimeType === "application/json", 'Проверяю application/json. Фактическое знаение: ' + response.contentType.mimeType);
   client.assert(response.body["message"] === "entity not found", "сообщение некорректное");
   client.assert(response.body["status"] === "fail", "Некорректный статус");
 });
 %}

### Тестирование поиска даты рождения и профессии знакомого по id
GET http://localhost:80/contacts?id_recipient[]=1

> {%
   client.test('Тестирование поиска даты рождения и профессии знакомого по id', function () {
   client.assert(response.status === 500, 'Проверяю код ответа. Ожидаю код 500. Фактическое знаение: ' + response.status);
   client.assert(response.contentType.mimeType === "application/json", 'Проверяю application/json. Фактическое знаение: ' + response.contentType.mimeType);
   client.assert(response.body['status'] === "fail", "Некорректный статус");
   client.assert(response.body['message'] === "incorrect id_recipient", "Некорректное сообщение");
 });
 %}

### Тестирование поиска знакомого по Ф.И.О
GET http://localhost:80/contacts?full_name[]=Осипов Геннадий Иванович

> {%
   client.test('Тестирование поиска знакомого по Ф.И.О', function () {
   client.assert(response.status === 500, 'Проверяю код ответа. Ожидаю код 500. Фактическое знаение: ' + response.status);
   client.assert(response.contentType.mimeType === "application/json", 'Проверяю application/json. Фактическое знаение: ' + response.contentType.mimeType);
   client.assert(response.body['status'] === "fail", "Некорректный статус");
   client.assert(response.body['message'] === "incorrect full_name", "Некорректное сообщение");
 });
 %}

### Тестирование поиска знакомого по дате рождения
GET http://localhost:80/contacts?birthday[]=15.06.1985

> {%
   client.test('Тестирование поиска знакомого по дате рождения', function () {
   client.assert(response.status === 500, 'Проверяю код ответа. Ожидаю код 500. Фактическое знаение: ' + response.status);
   client.assert(response.contentType.mimeType === "application/json", 'Проверяю application/json. Фактическое знаение: ' + response.contentType.mimeType);
   client.assert(response.body['status'] === "fail", "Некорректный статус");
   client.assert(response.body['message'] === "incorrect birthday", "Некорректное сообщение");
 });
 %}

### Тестирование поиска знакомого по профессии
GET http://localhost:80/contacts?profession[]=Автомеханик

> {%
   client.test('Тестирование поиска знакомого по дате рождения', function () {
   client.assert(response.status === 500, 'Проверяю код ответа. Ожидаю код 500. Фактическое знаение: ' + response.status);
   client.assert(response.contentType.mimeType === "application/json", 'Проверяю application/json. Фактическое знаение: ' + response.contentType.mimeType);
   client.assert(response.body['status'] === "fail", "Некорректный статус");
   client.assert(response.body['message'] === "incorrect profession", "Некорректное сообщение");
 });
 %}

### Тестирование поиска знакомого по профессии
GET http://localhost:80/contacts?contract_number[]=5684

> {%
   client.test('Тестирование поиска знакомого по дате рождения', function () {
   client.assert(response.status === 500, 'Проверяю код ответа. Ожидаю код 500. Фактическое знаение: ' + response.status);
   client.assert(response.contentType.mimeType === "application/json", 'Проверяю application/json. Фактическое знаение: ' + response.contentType.mimeType);
   client.assert(response.body['status'] === "fail", "Некорректный статус");
   client.assert(response.body['message'] === "incorrect contract_number", "Некорректное сообщение");
 });
 %}

### Тестирование поиска знакомого по профессии
GET http://localhost:80/contacts?average_transaction_amount[]=2500

> {%
   client.test('Тестирование поиска знакомого по дате рождения', function () {
   client.assert(response.status === 500, 'Проверяю код ответа. Ожидаю код 500. Фактическое знаение: ' + response.status);
   client.assert(response.contentType.mimeType === "application/json", 'Проверяю application/json. Фактическое знаение: ' + response.contentType.mimeType);
   client.assert(response.body['status'] === "fail", "Некорректный статус");
   client.assert(response.body['message'] === "incorrect average_transaction_amount", "Некорректное сообщение");
 });
 %}

### Тестирование поиска знакомого по профессии
GET http://localhost:80/contacts?discount[]=5%25

> {%
   client.test('Тестирование поиска знакомого по дате рождения', function () {
   client.assert(response.status === 500, 'Проверяю код ответа. Ожидаю код 500. Фактическое знаение: ' + response.status);
   client.assert(response.contentType.mimeType === "application/json", 'Проверяю application/json. Фактическое знаение: ' + response.contentType.mimeType);
   client.assert(response.body['status'] === "fail", "Некорректный статус");
   client.assert(response.body['message'] === "incorrect discount", "Некорректное сообщение");
 });
 %}

### Тестирование поиска знакомого по профессии
GET http://localhost:80/contacts?time_to_call[]=С 9:00 до 13:00 в будни

> {%
   client.test('Тестирование поиска знакомого по дате рождения', function () {
   client.assert(response.status === 500, 'Проверяю код ответа. Ожидаю код 500. Фактическое знаение: ' + response.status);
   client.assert(response.contentType.mimeType === "application/json", 'Проверяю application/json. Фактическое знаение: ' + response.contentType.mimeType);
   client.assert(response.body['status'] === "fail", "Некорректный статус");
   client.assert(response.body['message'] === "incorrect time_to_call", "Некорректное сообщение");
 });
 %}

### Тестирование поиска знакомого по профессии
GET http://localhost:80/contacts?department[]=Дирекция

> {%
   client.test('Тестирование поиска знакомого по дате рождения', function () {
   client.assert(response.status === 500, 'Проверяю код ответа. Ожидаю код 500. Фактическое знаение: ' + response.status);
   client.assert(response.contentType.mimeType === "application/json", 'Проверяю application/json. Фактическое знаение: ' + response.contentType.mimeType);
   client.assert(response.body['status'] === "fail", "Некорректный статус");
   client.assert(response.body['message'] === "incorrect department", "Некорректное сообщение");
 });
 %}

### Тестирование поиска знакомого по профессии
GET http://localhost:80/contacts?position[]=Директор

> {%
   client.test('Тестирование поиска знакомого по дате рождения', function () {
   client.assert(response.status === 500, 'Проверяю код ответа. Ожидаю код 500. Фактическое знаение: ' + response.status);
   client.assert(response.contentType.mimeType === "application/json", 'Проверяю application/json. Фактическое знаение: ' + response.contentType.mimeType);
   client.assert(response.body['status'] === "fail", "Некорректный статус");
   client.assert(response.body['message'] === "incorrect position", "Некорректное сообщение");
 });
 %}

### Тестирование поиска знакомого по профессии
GET http://localhost:80/contacts?room_number[]=405

> {%
   client.test('Тестирование поиска знакомого по дате рождения', function () {
   client.assert(response.status === 500, 'Проверяю код ответа. Ожидаю код 500. Фактическое знаение: ' + response.status);
   client.assert(response.contentType.mimeType === "application/json", 'Проверяю application/json. Фактическое знаение: ' + response.contentType.mimeType);
   client.assert(response.body['status'] === "fail", "Некорректный статус");
   client.assert(response.body['message'] === "incorrect room_number", "Некорректное сообщение");
 });
 %}

### Тестирование поиска знакомого по профессии
GET http://localhost:80/contacts?status[]=Дед

> {%
   client.test('Тестирование поиска знакомого по дате рождения', function () {
   client.assert(response.status === 500, 'Проверяю код ответа. Ожидаю код 500. Фактическое знаение: ' + response.status);
   client.assert(response.contentType.mimeType === "application/json", 'Проверяю application/json. Фактическое знаение: ' + response.contentType.mimeType);
   client.assert(response.body['status'] === "fail", "Некорректный статус");
   client.assert(response.body['message'] === "incorrect status", "Некорректное сообщение");
 });
 %}

### Тестирование поиска знакомого по профессии
GET http://localhost:80/contacts?ringtone[]=Bells

> {%
   client.test('Тестирование поиска знакомого по дате рождения', function () {
   client.assert(response.status === 500, 'Проверяю код ответа. Ожидаю код 500. Фактическое знаение: ' + response.status);
   client.assert(response.contentType.mimeType === "application/json", 'Проверяю application/json. Фактическое знаение: ' + response.contentType.mimeType);
   client.assert(response.body['status'] === "fail", "Некорректный статус");
   client.assert(response.body['message'] === "incorrect ringtone", "Некорректное сообщение");
 });
 %}

### Тестирование поиска знакомого по профессии
GET http://localhost:80/contacts?hotkey[]=1

> {%
   client.test('Тестирование поиска знакомого по дате рождения', function () {
   client.assert(response.status === 500, 'Проверяю код ответа. Ожидаю код 500. Фактическое знаение: ' + response.status);
   client.assert(response.contentType.mimeType === "application/json", 'Проверяю application/json. Фактическое знаение: ' + response.contentType.mimeType);
   client.assert(response.body['status'] === "fail", "Некорректный статус");
   client.assert(response.body['message'] === "incorrect hotkey", "Некорректное сообщение");
 });
 %}

### Тестирование запроса без path
GET http://localhost:80/?param=ru

> {%
     client.test("Тестирование запроса без path", function () {
            client.assert(response.status === 404, 'Проверяю код ответа. Фактическое знаение: ' + response.status);
            client.assert(response.contentType.mimeType === "application/json", 'Проверяю application/json. Фактическое знаение: ' + response.contentType.mimeType);
            client.assert(response.body['status'] === "fail", "Некорректный статус");
            client.assert(response.body['message'] === "unsupported request", "Некорректное сообщение");
     })
 %}

### Тестирование неподдерживаемого приложения url
GET http://localhost:80/hhh?param=ru

> {%
     client.test("Тестирование неподдерживаемого приложения url", function () {
            client.assert(response.status === 404, 'Проверяю код ответа. Фактическое знаение: ' + response.status);
            client.assert(response.contentType.mimeType === "application/json", 'Проверяю application/json. Фактическое знаение: ' + response.contentType.mimeType);
            client.assert(response.body['status'] === "fail", "Некорректный статус");
            client.assert(response.body['message'] === "unsupported request", "Некорректное сообщение");
     })
 %}