### Тестирование поиска знакомого по id (без GET-параметра)
GET http://localhost:8080/recipients/1

> {%
   client.test('Тестирование поиска знакомого по id (без GET-параметра)', function () {
   client.assert(response.status === 200, 'Проверяю код ответа. Ожидаю код 200. Фактическое знаение: ' + response.status);
   client.assert(response.contentType.mimeType === "application/json", 'Проверяю application/json. Фактическое знаение: ' + response.contentType.mimeType);
   client.assert(response.body['id_recipient'] === 1, "id получателя не корректен");
   client.assert(response.body['full_name'] === "Осипов Геннадий Иванович", "полное имя не корректно");
   client.assert(response.body['birthday'] === "15.06.1985", "день рождения не корректно");
   client.assert(response.body['profession'] === "Системный администратор", "профессия не корректна");
 });
 %}

### Тестирование поиска даты рождения и профессии знакомого по id
GET http://localhost:8080/recipients?id_recipient=1

> {%
   client.test('Тестирование поиска даты рождения и профессии знакомого по id', function () {
   client.assert(response.status === 200, 'Проверяю код ответа. Ожидаю код 200. Фактическое знаение: ' + response.status);
   client.assert(response.contentType.mimeType === "application/json", 'Проверяю application/json. Фактическое знаение: ' + response.contentType.mimeType);
   client.assert(response.body[0]['id_recipient'] === 1, "id получателя не корректен");
   client.assert(response.body[0]['full_name'] === "Осипов Геннадий Иванович", "полное имя не корректно");
   client.assert(response.body[0]['birthday'] === "15.06.1985", "день рождения не корректно");
   client.assert(response.body[0]['profession'] === "Системный администратор", "профессия не корректна");
 });
 %}

### Тестирование поиска знакомого по Ф.И.О
GET http://localhost:8080/recipients?full_name=Осипов Геннадий Иванович

> {%
   client.test('Тестирование поиска знакомого по Ф.И.О', function () {
   client.assert(response.status === 200, 'Проверяю код ответа. Ожидаю код 200. Фактическое знаение: ' + response.status);
   client.assert(response.contentType.mimeType === "application/json", 'Проверяю application/json. Фактическое знаение: ' + response.contentType.mimeType);
   client.assert(response.body[0]['id_recipient'] === 1, "id получателя не корректен");
   client.assert(response.body[0]['full_name'] === "Осипов Геннадий Иванович", "полное имя не корректно");
   client.assert(response.body[0]['birthday'] === "15.06.1985", "день рождения не корректно");
   client.assert(response.body[0]['profession'] === "Системный администратор", "профессия не корректна");
 });
 %}

### Тестирование поиска знакомого по дате рождения
GET http://localhost:8080/recipients?birthday=15.06.1985

> {%
   client.test('Тестирование поиска знакомого по дате рождения', function () {
   client.assert(response.status === 200, 'Проверяю код ответа. Ожидаю код 200. Фактическое знаение: ' + response.status);
   client.assert(response.contentType.mimeType === "application/json", 'Проверяю application/json. Фактическое знаение: ' + response.contentType.mimeType);
   client.assert(response.body[0]['id_recipient'] === 1, "id получателя не корректен");
   client.assert(response.body[0]['full_name'] === "Осипов Геннадий Иванович", "полное имя не корректно");
   client.assert(response.body[0]['birthday'] === "15.06.1985", "день рождения не корректно");
   client.assert(response.body[0]['profession'] === "Системный администратор", "профессия не корректна");
 });
 %}

### Тестирование поиска знакомого по профессии
GET http://localhost:8080/recipients?profession=Автомеханик

> {%
   client.test('Тестирование поиска знакомого по дате рождения', function () {
   client.assert(response.status === 200, 'Проверяю код ответа. Ожидаю код 200. Фактическое знаение: ' + response.status);
   client.assert(response.contentType.mimeType === "application/json", 'Проверяю application/json. Фактическое знаение: ' + response.contentType.mimeType);
   client.assert(response.body[0]['id_recipient'] === 3, "id получателя не корректен");
   client.assert(response.body[0]['full_name'] === "Дамир Авто", "полное имя не корректно");
   client.assert(response.body[0]['birthday'] === "01.12.1990", "день рождения не корректно");
   client.assert(response.body[0]['profession'] === "Автомеханик", "профессия не корректна");
 });
 %}

### Тестирование поиска контактов по категориям(получатели)
GET http://localhost:8080/recipients

> {%
   client.test('Тестирование поиска контактов по категориям(получатели)', function () {
   client.assert(response.status === 200, 'Проверяю код ответа. Фактическое знаение: ' + response.status);
   client.assert(response.contentType.mimeType === "application/json", 'Проверяю application/json. Фактическое знаение: ' + response.contentType.mimeType);
   client.assert(response.body.hasOwnProperty('length') && response.body.length === 5, "В ответе есть 5 элементов");
 });
 %}